import os
import asyncio
from aiogram import Router, F
from aiogram.types import Message
import speech_recognition as sr
from pydub import AudioSegment

router = Router()


async def recognize_google(file_path_wav):
	recognizer = sr.Recognizer()
	with sr.AudioFile(file_path_wav) as source:
		audio_data = recognizer.record(source)
	print("process")
	try:
		text = recognizer.recognize_google(audio_data, language='ru-RU')
		return text
	except sr.UnknownValueError:
		return None
	except sr.RequestError as e:
		raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏: {e}")


@router.message(F.photo)
async def photo_handler(message: Message):
	await message.answer("‚ö†Ô∏è –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–∫–∞ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è. "
	                     "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üòâ")


@router.message(F.voice)
async def voice_handler(message: Message):
	from main import bot
	file_id = message.voice.file_id
	file = await bot.get_file(file_id)
	file_path = file.file_path
	print(file_path)
	file_path_ogg = f"{file_path}.ogg"
	print(file_path_ogg)
	await bot.download_file(file_path, file_path_ogg)
	answer_msg = await message.answer("—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üßê")

	#convert await
	audio = AudioSegment.from_ogg(file_path_ogg)
	file_path_wav = f"{file_path}.wav"
	audio.export(file_path_wav, format="wav")
	print(file_path_wav)

	#recognize await
	# try:
	text = await recognize_google(file_path_wav)
	await answer_msg.delete()
	if text:
		await message.answer(text)
	else:
		await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å!")
	print('ok')

	# except sr.UnknownValueError:
	# 	await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. EXCEPT")
	# except sr.RequestError as e:
	# 	await message.answer(
	# 		f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ EXCEPT: {e}")
	# finally:
		# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
	os.remove(file_path_ogg)
	os.remove(file_path_wav)


@router.message(F.content_type.in_({'voice', 'video', 'audio'}))
async def media_handler(message: Message):
	await message.answer("‚ö†Ô∏è –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã –ø–æ–∫–∞ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è. "
		                     "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üòâ")
